DROP procedure IF EXISTS `SEARCH_CUSTOMER`;
DELIMITER $$
CREATE PROCEDURE `SEARCH_CUSTOMER` (CUSTOMER_ID INT)
BEGIN
SELECT *
FROM CUSTOMER C
WHERE C.CUSTOMERID = CUSTOMER_ID ;
END$$
-- CALL SEARCH_CUSTOMER(1);

DROP procedure IF EXISTS `ADD_CUSTOMER`;
DELIMITER $$
CREATE PROCEDURE `ADD_CUSTOMER` (CUSTOMER_ID INT, CUSTOMER_NAME NVARCHAR(45), GENDER INT, PHONE NVARCHAR(15), ADDRESS NVARCHAR(45), USERNAME VARCHAR(45), PASSWORD VARCHAR(45))
BEGIN
INSERT INTO CUSTOMER VALUES (CUSTOMER_ID, CUSTOMER_NAME, GENDER, PHONE, ADDRESS, USERNAME, PASSWORD);
END$$
-- CALL ADD_CUSTOMER(10, 'Doan Van Thai', 1, '052456785', '36 Nguyen Hue', 'dvthai', 'dvthai456');

DROP procedure IF EXISTS `SELECT_CUSTOMER`;
DELIMITER $$
CREATE PROCEDURE `SELECT_CUSTOMER` ()
BEGIN
SELECT * FROM CUSTOMER;
END$$
-- CALL SELECT_CUSTOMER;

DROP procedure IF EXISTS `UPDATE_CUSTOMER`;
DELIMITER $$
CREATE PROCEDURE `UPDATE_CUSTOMER` (CUSTOMER_ID INT, NEW_PASSWORD VARCHAR(45))
BEGIN
UPDATE CUSTOMER SET PASSWORD = NEW_PASSWORD WHERE CUSTOMERID = CUSTOMER_ID;
END$$
-- CALL UPDATE_CUSTOMER(1, '123456');

DROP procedure IF EXISTS `DELETE_CUSTOMER`;
DELIMITER $$
CREATE PROCEDURE `DELETE_CUSTOMER` (CUSTOMER_ID INT)
BEGIN
DELETE FROM PRODUCTCART WHERE CUSTOMER_CUSTOMERID = CUSTOMER_ID;
UPDATE ORDERS SET CUSTOMER_CUSTOMERID = NULL WHERE CUSTOMER_CUSTOMERID = CUSTOMER_ID;
DELETE FROM CUSTOMER WHERE CUSTOMERID = CUSTOMER_ID;
END$$
-- CALL DELETE_CUSTOMER(1);
